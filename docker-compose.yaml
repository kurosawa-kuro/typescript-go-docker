services:
  app:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    container_name: next-app
    tty: true
    working_dir: /usr/src/app
    volumes:
      - ./frontend:/usr/src/app
      - frontend-node-modules:/usr/src/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - API_URL=http://go:8000
    command: sh -c "npm install && npm run dev"
    user: "root"
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: ${DB_CONTAINER}
    environment:
      MYSQL_ROOT_USER: ${ROOTUSER}
      MYSQL_ROOT_PASSWORD: ${ROOTPASS}
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${USER_NAME}
      MYSQL_PASSWORD: ${USER_PASSWORD}
      TZ: "Asia/Tokyo"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    env_file:
      - .env
    ports:
      - 3366:3306
    networks:
      - app-network

  go:
    build: ./docker/go
    container_name: go-api
    volumes:
      - ./backend/src:/app/src
      - ./.env:/app/src/.env
      - ./backend/.air.toml:/app/.air.toml
    tty: true
    ports:
      - "8000:8000"
    environment:
      MYSQL_HOST: ${DB_CONTAINER}
    working_dir: /app/src
    command: air -c ../.air.toml
    networks:
      - app-network

volumes:
  frontend-node-modules:
    driver: local

networks:
  app-network:
    driver: bridge